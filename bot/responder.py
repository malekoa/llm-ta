import os
from openai import OpenAI
from dotenv import load_dotenv
import re

load_dotenv()

client = OpenAI(api_key=os.getenv("OPENAI_API_KEY"))

HTML_HEADER = """
<!-- footer-start -->
<div style="margin-bottom: 20px; padding: 12px; background-color: #e0e0e0; color: #333; font-size: 0.75rem; border-left: 4px solid #555;">
  <p style="margin: 0 0 6px 0;">
    <strong>Disclaimer:</strong> This response was generated by an AI assistant and may contain errors. Please verify all information before relying on it.
  </p>
  <p style="margin: 0;">
    Was this response helpful?
    <a href="http://your-dashboard.local/feedback?vote=up&thread_id=THREAD_ID_PLACEHOLDER&message_id=MESSAGE_ID_PLACEHOLDER">👍 Yes</a>
    <a href="http://your-dashboard.local/feedback?vote=down&thread_id=THREAD_ID_PLACEHOLDER&message_id=MESSAGE_ID_PLACEHOLDER" style="margin-left: 10px;">👎 No</a>
    <a href="http://your-dashboard.local/thread?thread_id=THREAD_ID_PLACEHOLDER&message_id=MESSAGE_ID_PLACEHOLDER" style="margin-left: 10px;">💬 View thread</a>
  </p>
</div>
<!-- footer-end -->
"""

def generate_response(subject: str, body: str) -> str:
    prompt = f"""Your name is TA Bot. You are a helpful teaching assistant for a semantics course. You know all about set theory. Here is a message you've received:

Subject: {subject}

Body:
{body}

Reply in a polite and professional tone. Omit all placeholders."""

    try:
        response = client.chat.completions.create(
            model="gpt-3.5-turbo",
            messages=[
                {"role": "system", "content": "You are a helpful teaching assistant who replies in polite HTML using <p>, <strong>, and <ul> as needed. Avoid inline styles."},
                {"role": "user", "content": prompt}
            ],
            max_tokens=300,
            temperature=0.7
        )
        content = response.choices[0].message.content
        if isinstance(content, str):
            return content.strip()
        else:
            return "Thank you for your email. I’ll get back to you shortly."
    except Exception as e:
        print("Error generating response:", e)
        return "Thank you for your email. I’ll get back to you shortly."

def remove_previous_footer(body: str) -> str:
    """Remove any previously added disclaimer blocks from bot replies."""
    pattern = re.compile(r'<!-- footer-start -->.*?<!-- footer-end -->', re.DOTALL)
    return pattern.sub('', body).strip()
